{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUNDARA RAMARAO\\\\user-employee-management-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2'; // <-- 1. IMPORT SWEETALERT2\nimport withReactContent from 'sweetalert2-react-content'; // <-- 1. IMPORT THE WRAPPER\n\n// Import all pages and layouts\nimport LoginPage from './pages/LoginPage';\nimport ResetPasswordPage from './pages/ResetPasswordPage';\nimport AdminLayout from './layouts/AdminLayout';\nimport DashboardLayout from './layouts/DashboardLayout';\nimport AdminHomePage from './pages/AdminHomePage';\nimport ManageUsersPage from './pages/ManageUsersPage';\nimport DashboardHomePage from './pages/DashboardHomePage';\nimport EmployeeListPage from './pages/EmployeeListPage';\nimport OnboardingPage from './pages/OnboardingPage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MySwal = withReactContent(Swal); // <-- 2. CREATE THE INSTANCE\n\n// ProtectedRoute component remains the same\n_c = MySwal;\nconst ProtectedRoute = ({\n  children,\n  allowedRoles\n}) => {\n  // ... same as before ...\n};\n_c2 = ProtectedRoute;\nfunction App() {\n  _s();\n  const [, setUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // ... same as before ...\n  }, []);\n  const handleLoginSuccess = userData => {\n    // ... same as before ...\n  };\n\n  // --- 3. THIS IS THE UPDATED FUNCTION ---\n  const handleLogout = () => {\n    // First, clear the user data\n    localStorage.removeItem('user');\n    setUser(null);\n\n    // Then, show a success message\n    MySwal.fire({\n      icon: 'success',\n      title: 'Logged Out',\n      text: 'You have been successfully logged out.',\n      timer: 1500,\n      // Pop-up will auto-close after 1.5 seconds\n      showConfirmButton: false\n    });\n\n    // Finally, redirect to the login page\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(LoginPage, {\n        onLoginSuccess: handleLoginSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/reset-password\",\n      element: /*#__PURE__*/_jsxDEV(ResetPasswordPage, {\n        onPasswordResetSuccess: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/admin/*\",\n      element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        allowedRoles: ['ROLE_ADMIN'],\n        children: /*#__PURE__*/_jsxDEV(AdminLayout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 72\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/hr/*\",\n      element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        allowedRoles: ['ROLE_HR', 'ROLE_MANAGER'],\n        children: /*#__PURE__*/_jsxDEV(DashboardLayout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 85\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"9yN9oIw+3g+En9ETUhZtAzxkbMo=\", false, function () {\n  return [useNavigate];\n});\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MySwal\");\n$RefreshReg$(_c2, \"ProtectedRoute\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","Route","Routes","useNavigate","Swal","withReactContent","LoginPage","ResetPasswordPage","AdminLayout","DashboardLayout","AdminHomePage","ManageUsersPage","DashboardHomePage","EmployeeListPage","OnboardingPage","jsxDEV","_jsxDEV","MySwal","_c","ProtectedRoute","children","allowedRoles","_c2","App","_s","setUser","navigate","handleLoginSuccess","userData","handleLogout","localStorage","removeItem","fire","icon","title","text","timer","showConfirmButton","path","element","onLoginSuccess","fileName","_jsxFileName","lineNumber","columnNumber","onPasswordResetSuccess","to","_c3","$RefreshReg$"],"sources":["C:/Users/SUNDARA RAMARAO/user-employee-management-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom';\nimport Swal from 'sweetalert2'; // <-- 1. IMPORT SWEETALERT2\nimport withReactContent from 'sweetalert2-react-content'; // <-- 1. IMPORT THE WRAPPER\n\n// Import all pages and layouts\nimport LoginPage from './pages/LoginPage';\nimport ResetPasswordPage from './pages/ResetPasswordPage';\nimport AdminLayout from './layouts/AdminLayout';\nimport DashboardLayout from './layouts/DashboardLayout';\nimport AdminHomePage from './pages/AdminHomePage';\nimport ManageUsersPage from './pages/ManageUsersPage';\nimport DashboardHomePage from './pages/DashboardHomePage';\nimport EmployeeListPage from './pages/EmployeeListPage';\nimport OnboardingPage from './pages/OnboardingPage';\nimport './App.css';\n\nconst MySwal = withReactContent(Swal); // <-- 2. CREATE THE INSTANCE\n\n// ProtectedRoute component remains the same\nconst ProtectedRoute = ({ children, allowedRoles }) => {\n    // ... same as before ...\n};\n\nfunction App() {\n    const [, setUser] = useState(null);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // ... same as before ...\n    }, []);\n\n    const handleLoginSuccess = (userData) => {\n        // ... same as before ...\n    };\n    \n    // --- 3. THIS IS THE UPDATED FUNCTION ---\n    const handleLogout = () => {\n        // First, clear the user data\n        localStorage.removeItem('user');\n        setUser(null);\n\n        // Then, show a success message\n        MySwal.fire({\n            icon: 'success',\n            title: 'Logged Out',\n            text: 'You have been successfully logged out.',\n            timer: 1500, // Pop-up will auto-close after 1.5 seconds\n            showConfirmButton: false,\n        });\n        \n        // Finally, redirect to the login page\n        navigate('/login');\n    };\n\n    return (\n        <Routes>\n            {/* The rest of your Routes component is exactly the same */}\n            <Route path=\"/login\" element={<LoginPage onLoginSuccess={handleLoginSuccess} />} />\n            <Route path=\"/reset-password\" element={<ResetPasswordPage onPasswordResetSuccess={handleLogout} />} />\n\n            <Route\n                path=\"/admin/*\"\n                element={<ProtectedRoute allowedRoles={['ROLE_ADMIN']}><AdminLayout /></ProtectedRoute>}\n            >\n                {/* ... Admin nested routes ... */}\n            </Route>\n\n            <Route\n                path=\"/hr/*\"\n                element={<ProtectedRoute allowedRoles={['ROLE_HR', 'ROLE_MANAGER']}><DashboardLayout /></ProtectedRoute>}\n            >\n                {/* ... HR/Manager nested routes ... */}\n            </Route>\n            \n            <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n        </Routes>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}