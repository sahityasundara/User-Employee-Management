{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUNDARA RAMARAO\\\\user-employee-management-frontend\\\\src\\\\pages\\\\DashboardHomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getDashboardStats, getEmployeeCountByDepartment } from '../services/api';\nimport Card from '../components/Card';\nimport ClockWidget from '../components/ClockWidget';\nimport PieChart from '../components/PieChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardHomePage = () => {\n  _s();\n  const [stats, setStats] = useState(null);\n  const [departmentData, setDepartmentData] = useState(null);\n  const [error, setError] = useState('');\n  const user = JSON.parse(localStorage.getItem('user'));\n  const username = (user === null || user === void 0 ? void 0 : user.username) || 'User';\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch both sets of data in parallel for efficiency\n        const [statsResponse, departmentResponse] = await Promise.all([getDashboardStats(), getEmployeeCountByDepartment()]);\n        setStats(statsResponse.data);\n        setDepartmentData(departmentResponse.data);\n      } catch (err) {\n        setError('Failed to load dashboard data.');\n        console.error(err);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Prepare data for the department pie chart\n  const departmentChartData = {\n    labels: departmentData ? Object.keys(departmentData) : [],\n    datasets: [{\n      label: 'Employees by Department',\n      data: departmentData ? Object.values(departmentData) : [],\n      backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n      borderWidth: 1\n    }]\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            margin: 0\n          },\n          children: [\"Welcome, \", username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: 0,\n            color: '#6c757d',\n            fontSize: '1.1rem'\n          },\n          children: \"Here is your employee summary.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ClockWidget, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), !stats ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading stats...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '1.5rem',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        title: \"Total Employees\",\n        value: stats.totalEmployees\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        title: \"New This Month\",\n        value: stats.newThisMonth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Pending Profiles\",\n        value: stats.pendingProfiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      style: {\n        marginTop: '2rem'\n      },\n      children: !departmentData ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading chart data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 36\n      }, this) : /*#__PURE__*/_jsxDEV(PieChart, {\n        chartData: departmentChartData,\n        title: \"Employee Distribution by Department\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardHomePage, \"LCpg326wvsjX+ufS8LF7EJ3Urmw=\");\n_c = DashboardHomePage;\nexport default DashboardHomePage;\nvar _c;\n$RefreshReg$(_c, \"DashboardHomePage\");","map":{"version":3,"names":["React","useState","useEffect","getDashboardStats","getEmployeeCountByDepartment","Card","ClockWidget","PieChart","jsxDEV","_jsxDEV","DashboardHomePage","_s","stats","setStats","departmentData","setDepartmentData","error","setError","user","JSON","parse","localStorage","getItem","username","fetchData","statsResponse","departmentResponse","Promise","all","data","err","console","departmentChartData","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","alignItems","marginBottom","margin","color","fontSize","gap","flexWrap","title","value","totalEmployees","newThisMonth","pendingProfiles","marginTop","chartData","_c","$RefreshReg$"],"sources":["C:/Users/SUNDARA RAMARAO/user-employee-management-frontend/src/pages/DashboardHomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getDashboardStats, getEmployeeCountByDepartment } from '../services/api';\r\nimport Card from '../components/Card';\r\nimport ClockWidget from '../components/ClockWidget';\r\nimport PieChart from '../components/PieChart';\r\n\r\nconst DashboardHomePage = () => {\r\n    const [stats, setStats] = useState(null);\r\n    const [departmentData, setDepartmentData] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    const username = user?.username || 'User';\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                // Fetch both sets of data in parallel for efficiency\r\n                const [statsResponse, departmentResponse] = await Promise.all([\r\n                    getDashboardStats(),\r\n                    getEmployeeCountByDepartment()\r\n                ]);\r\n                setStats(statsResponse.data);\r\n                setDepartmentData(departmentResponse.data);\r\n            } catch (err) {\r\n                setError('Failed to load dashboard data.');\r\n                console.error(err);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Prepare data for the department pie chart\r\n    const departmentChartData = {\r\n        labels: departmentData ? Object.keys(departmentData) : [],\r\n        datasets: [\r\n            {\r\n                label: 'Employees by Department',\r\n                data: departmentData ? Object.values(departmentData) : [],\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)',\r\n                    'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)',\r\n                    'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)'\r\n                ],\r\n                borderColor: [\r\n                    'rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)',\r\n                    'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)',\r\n                    'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'\r\n                ],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    if (error) return <p className=\"error-message\">{error}</p>;\r\n\r\n    return (\r\n        <div>\r\n            {/* Welcome Header */}\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '2rem' }}>\r\n                <div>\r\n                    <h1 style={{ margin: 0 }}>Welcome, {username}!</h1>\r\n                    <p style={{ margin: 0, color: '#6c757d', fontSize: '1.1rem' }}>\r\n                        Here is your employee summary.\r\n                    </p>\r\n                </div>\r\n                <ClockWidget />\r\n            </div>\r\n\r\n            {/* Stats Cards */}\r\n            {!stats ? <p>Loading stats...</p> : (\r\n                <div style={{ display: 'flex', gap: '1.5rem', flexWrap: 'wrap' }}>\r\n                    <Card title=\"Total Employees\" value={stats.totalEmployees} />\r\n                    <Card title=\"New This Month\" value={stats.newThisMonth} />\r\n                    <Card title=\"Pending Profiles\" value={stats.pendingProfiles} />\r\n                </div>\r\n            )}\r\n\r\n            {/* Chart Section */}\r\n            <div className=\"form-container\" style={{ marginTop: '2rem' }}>\r\n                {!departmentData ? <p>Loading chart data...</p> : (\r\n                    <PieChart chartData={departmentChartData} title=\"Employee Distribution by Department\" />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardHomePage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,iBAAiB,EAAEC,4BAA4B,QAAQ,iBAAiB;AACjF,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMiB,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;EACrD,MAAMC,QAAQ,GAAG,CAAAL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK,QAAQ,KAAI,MAAM;EAEzCrB,SAAS,CAAC,MAAM;IACZ,MAAMsB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA;QACA,MAAM,CAACC,aAAa,EAAEC,kBAAkB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC1DzB,iBAAiB,CAAC,CAAC,EACnBC,4BAA4B,CAAC,CAAC,CACjC,CAAC;QACFS,QAAQ,CAACY,aAAa,CAACI,IAAI,CAAC;QAC5Bd,iBAAiB,CAACW,kBAAkB,CAACG,IAAI,CAAC;MAC9C,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVb,QAAQ,CAAC,gCAAgC,CAAC;QAC1Cc,OAAO,CAACf,KAAK,CAACc,GAAG,CAAC;MACtB;IACJ,CAAC;IACDN,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,mBAAmB,GAAG;IACxBC,MAAM,EAAEnB,cAAc,GAAGoB,MAAM,CAACC,IAAI,CAACrB,cAAc,CAAC,GAAG,EAAE;IACzDsB,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,yBAAyB;MAChCR,IAAI,EAAEf,cAAc,GAAGoB,MAAM,CAACI,MAAM,CAACxB,cAAc,CAAC,GAAG,EAAE;MACzDyB,eAAe,EAAE,CACb,yBAAyB,EAAE,yBAAyB,EACpD,yBAAyB,EAAE,yBAAyB,EACpD,0BAA0B,EAAE,yBAAyB,CACxD;MACDC,WAAW,EAAE,CACT,uBAAuB,EAAE,uBAAuB,EAChD,uBAAuB,EAAE,uBAAuB,EAChD,wBAAwB,EAAE,uBAAuB,CACpD;MACDC,WAAW,EAAE;IACjB,CAAC;EAET,CAAC;EAED,IAAIzB,KAAK,EAAE,oBAAOP,OAAA;IAAGiC,SAAS,EAAC,eAAe;IAAAC,QAAA,EAAE3B;EAAK;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAE1D,oBACItC,OAAA;IAAAkC,QAAA,gBAEIlC,OAAA;MAAKuC,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,UAAU,EAAE,QAAQ;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAT,QAAA,gBACzGlC,OAAA;QAAAkC,QAAA,gBACIlC,OAAA;UAAIuC,KAAK,EAAE;YAAEK,MAAM,EAAE;UAAE,CAAE;UAAAV,QAAA,GAAC,WAAS,EAACpB,QAAQ,EAAC,GAAC;QAAA;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnDtC,OAAA;UAAGuC,KAAK,EAAE;YAAEK,MAAM,EAAE,CAAC;YAAEC,KAAK,EAAE,SAAS;YAAEC,QAAQ,EAAE;UAAS,CAAE;UAAAZ,QAAA,EAAC;QAE/D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNtC,OAAA,CAACH,WAAW;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,EAGL,CAACnC,KAAK,gBAAGH,OAAA;MAAAkC,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAC7BtC,OAAA;MAAKuC,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEO,GAAG,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAd,QAAA,gBAC7DlC,OAAA,CAACJ,IAAI;QAACqD,KAAK,EAAC,iBAAiB;QAACC,KAAK,EAAE/C,KAAK,CAACgD;MAAe;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7DtC,OAAA,CAACJ,IAAI;QAACqD,KAAK,EAAC,gBAAgB;QAACC,KAAK,EAAE/C,KAAK,CAACiD;MAAa;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1DtC,OAAA,CAACJ,IAAI;QAACqD,KAAK,EAAC,kBAAkB;QAACC,KAAK,EAAE/C,KAAK,CAACkD;MAAgB;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CACR,eAGDtC,OAAA;MAAKiC,SAAS,EAAC,gBAAgB;MAACM,KAAK,EAAE;QAAEe,SAAS,EAAE;MAAO,CAAE;MAAApB,QAAA,EACxD,CAAC7B,cAAc,gBAAGL,OAAA;QAAAkC,QAAA,EAAG;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAC3CtC,OAAA,CAACF,QAAQ;QAACyD,SAAS,EAAEhC,mBAAoB;QAAC0B,KAAK,EAAC;MAAqC;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC1F;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACpC,EAAA,CAhFID,iBAAiB;AAAAuD,EAAA,GAAjBvD,iBAAiB;AAkFvB,eAAeA,iBAAiB;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}