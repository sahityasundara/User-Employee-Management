{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUNDARA RAMARAO\\\\user-employee-management-frontend\\\\src\\\\pages\\\\ResetPasswordPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { resetPassword } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\nconst ResetPasswordPage = ({\n  onPasswordResetSuccess\n}) => {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  // We no longer need the useState for error/success\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newPassword.length < 6) {\n      MySwal.fire({\n        icon: 'error',\n        title: 'Invalid Password',\n        text: 'Password must be at least 6 characters long.'\n      });\n      return;\n    }\n    if (newPassword !== confirmPassword) {\n      MySwal.fire({\n        icon: 'error',\n        title: 'Mismatch',\n        text: 'Passwords do not match.'\n      });\n      return;\n    }\n    try {\n      await resetPassword(newPassword);\n      MySwal.fire({\n        icon: 'success',\n        title: 'Password Reset!',\n        text: 'Your password has been changed successfully. You will now be logged out.',\n        timer: 3000,\n        timerProgressBar: true,\n        showConfirmButton: false\n      }).then(() => {\n        onPasswordResetSuccess();\n      });\n    } catch (err) {\n      MySwal.fire({\n        icon: 'error',\n        title: 'Error',\n        text: 'Failed to reset password. Please try again.'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is your first time logging in. You must reset your password to continue.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newPassword\",\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"newPassword\",\n          className: \"form-control\" // Bootstrap class\n          ,\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          className: \"form-control\" // Bootstrap class\n          ,\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPasswordPage, \"ps53tgkIwu4c8T0q0jZHcZfDanE=\");\n_c2 = ResetPasswordPage;\nexport default ResetPasswordPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"MySwal\");\n$RefreshReg$(_c2, \"ResetPasswordPage\");","map":{"version":3,"names":["React","useState","Swal","withReactContent","resetPassword","jsxDEV","_jsxDEV","MySwal","_c","ResetPasswordPage","onPasswordResetSuccess","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","handleSubmit","e","preventDefault","length","fire","icon","title","text","timer","timerProgressBar","showConfirmButton","then","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c2","$RefreshReg$"],"sources":["C:/Users/SUNDARA RAMARAO/user-employee-management-frontend/src/pages/ResetPasswordPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { resetPassword } from '../services/api';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst ResetPasswordPage = ({ onPasswordResetSuccess }) => {\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    // We no longer need the useState for error/success\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (newPassword.length < 6) {\r\n            MySwal.fire({ icon: 'error', title: 'Invalid Password', text: 'Password must be at least 6 characters long.' });\r\n            return;\r\n        }\r\n\r\n        if (newPassword !== confirmPassword) {\r\n            MySwal.fire({ icon: 'error', title: 'Mismatch', text: 'Passwords do not match.' });\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await resetPassword(newPassword);\r\n            MySwal.fire({\r\n                icon: 'success',\r\n                title: 'Password Reset!',\r\n                text: 'Your password has been changed successfully. You will now be logged out.',\r\n                timer: 3000,\r\n                timerProgressBar: true,\r\n                showConfirmButton: false\r\n            }).then(() => {\r\n                onPasswordResetSuccess();\r\n            });\r\n        } catch (err) {\r\n            MySwal.fire({ icon: 'error', title: 'Error', text: 'Failed to reset password. Please try again.' });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h1>Reset Your Password</h1>\r\n            <p>This is your first time logging in. You must reset your password to continue.</p>\r\n            {/* No need for error/success message paragraphs here anymore */}\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"newPassword\">New Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"newPassword\"\r\n                        className=\"form-control\" // Bootstrap class\r\n                        value={newPassword}\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"confirmPassword\">Confirm New Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"confirmPassword\"\r\n                        className=\"form-control\" // Bootstrap class\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPasswordPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}