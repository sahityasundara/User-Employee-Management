{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUNDARA RAMARAO\\\\user-employee-management-frontend\\\\src\\\\pages\\\\EmployeeListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { getEmployees, updateEmployee } from '../services/api';\nimport '../components/Table.css';\nimport '../components/Modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\nModal.setAppElement('#root');\nconst EmployeeListPage = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n\n  // --- THIS IS THE FIX ---\n  // Initialize with a structured empty object, not null.\n  const [selectedEmployee, setSelectedEmployee] = useState({\n    id: null,\n    name: '',\n    email: '',\n    department: '',\n    status: '',\n    dateJoined: '',\n    dateOfBirth: '',\n    age: '',\n    totalExperience: ''\n  });\n  const fetchEmployees = () => {/* ... same as before ... */};\n  useEffect(() => {\n    fetchEmployees();\n  }, []);\n  const openEditModal = employee => {\n    const formattedEmployee = {\n      ...employee,\n      dateJoined: employee.dateJoined ? new Date(employee.dateJoined).toISOString().split('T')[0] : '',\n      dateOfBirth: employee.dateOfBirth ? new Date(employee.dateOfBirth).toISOString().split('T')[0] : ''\n    };\n    setSelectedEmployee(formattedEmployee);\n    setIsEditModalOpen(true);\n  };\n  const closeEditModal = () => {\n    setIsEditModalOpen(false);\n    // No need to set selectedEmployee back to null\n  };\n  const handleEditChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSelectedEmployee(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleEditSubmit = e => {\n    e.preventDefault();\n    const payload = {\n      ...selectedEmployee,\n      age: parseInt(selectedEmployee.age),\n      totalExperience: parseInt(selectedEmployee.totalExperience)\n    };\n    updateEmployee(selectedEmployee.id, payload).then(() => {\n      closeEditModal();\n      MySwal.fire('Updated!', 'Employee details have been saved.', 'success');\n      fetchEmployees();\n    }).catch(err => MySwal.fire('Error!', 'Failed to update employee details.', 'error'));\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading employees...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"app-table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isEditModalOpen,\n      onRequestClose: closeEditModal,\n      className: \"modal-content\",\n      overlayClassName: \"modal-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Edit Employee: \", selectedEmployee.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeEditModal,\n        className: \"modal-close-button\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEditSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"name\",\n            value: selectedEmployee.name,\n            onChange: handleEditChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 68\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            name: \"email\",\n            value: selectedEmployee.email,\n            onChange: handleEditChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 69\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployeeListPage, \"iZdhQPdo4FOarRuYv7/TgcT0We8=\");\n_c2 = EmployeeListPage;\nexport default EmployeeListPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"MySwal\");\n$RefreshReg$(_c2, \"EmployeeListPage\");","map":{"version":3,"names":["React","useState","useEffect","Modal","Swal","withReactContent","getEmployees","updateEmployee","jsxDEV","_jsxDEV","MySwal","_c","setAppElement","EmployeeListPage","_s","employees","setEmployees","isLoading","setIsLoading","error","setError","isEditModalOpen","setIsEditModalOpen","selectedEmployee","setSelectedEmployee","id","name","email","department","status","dateJoined","dateOfBirth","age","totalExperience","fetchEmployees","openEditModal","employee","formattedEmployee","Date","toISOString","split","closeEditModal","handleEditChange","e","value","target","prev","handleEditSubmit","preventDefault","payload","parseInt","then","fire","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","isOpen","onRequestClose","overlayClassName","onClick","onSubmit","type","onChange","required","_c2","$RefreshReg$"],"sources":["C:/Users/SUNDARA RAMARAO/user-employee-management-frontend/src/pages/EmployeeListPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Modal from 'react-modal';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { getEmployees, updateEmployee } from '../services/api';\r\nimport '../components/Table.css';\r\nimport '../components/Modal.css';\r\n\r\nconst MySwal = withReactContent(Swal);\r\nModal.setAppElement('#root');\r\n\r\nconst EmployeeListPage = () => {\r\n    const [employees, setEmployees] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n\r\n    // --- THIS IS THE FIX ---\r\n    // Initialize with a structured empty object, not null.\r\n    const [selectedEmployee, setSelectedEmployee] = useState({\r\n        id: null, name: '', email: '', department: '', status: '',\r\n        dateJoined: '', dateOfBirth: '', age: '', totalExperience: ''\r\n    });\r\n\r\n    const fetchEmployees = () => { /* ... same as before ... */ };\r\n    useEffect(() => { fetchEmployees(); }, []);\r\n\r\n    const openEditModal = (employee) => {\r\n        const formattedEmployee = {\r\n            ...employee,\r\n            dateJoined: employee.dateJoined ? new Date(employee.dateJoined).toISOString().split('T')[0] : '',\r\n            dateOfBirth: employee.dateOfBirth ? new Date(employee.dateOfBirth).toISOString().split('T')[0] : ''\r\n        };\r\n        setSelectedEmployee(formattedEmployee);\r\n        setIsEditModalOpen(true);\r\n    };\r\n\r\n    const closeEditModal = () => {\r\n        setIsEditModalOpen(false);\r\n        // No need to set selectedEmployee back to null\r\n    };\r\n\r\n    const handleEditChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setSelectedEmployee(prev => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleEditSubmit = (e) => {\r\n        e.preventDefault();\r\n        const payload = { ...selectedEmployee, age: parseInt(selectedEmployee.age), totalExperience: parseInt(selectedEmployee.totalExperience) };\r\n\r\n        updateEmployee(selectedEmployee.id, payload)\r\n            .then(() => {\r\n                closeEditModal();\r\n                MySwal.fire('Updated!', 'Employee details have been saved.', 'success');\r\n                fetchEmployees();\r\n            })\r\n            .catch(err => MySwal.fire('Error!', 'Failed to update employee details.', 'error'));\r\n    };\r\n\r\n    if (isLoading) return <p>Loading employees...</p>;\r\n    if (error) return <p className=\"error-message\">{error}</p>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Employee Management</h2>\r\n            <table className=\"app-table\">\r\n                {/* ... table content ... */}\r\n            </table>\r\n\r\n            {/* --- Edit Employee Modal --- */}\r\n            {/* The modal will now only render when the modal is open, but the form fields\r\n                will always have a defined value from the selectedEmployee state. */}\r\n            <Modal isOpen={isEditModalOpen} onRequestClose={closeEditModal} className=\"modal-content\" overlayClassName=\"modal-overlay\">\r\n                <h2>Edit Employee: {selectedEmployee.name}</h2>\r\n                <button onClick={closeEditModal} className=\"modal-close-button\">×</button>\r\n                <form onSubmit={handleEditSubmit}>\r\n                    <div className=\"form-group\"><label>Name</label><input type=\"text\" className=\"form-control\" name=\"name\" value={selectedEmployee.name} onChange={handleEditChange} required /></div>\r\n                    <div className=\"form-group\"><label>Email</label><input type=\"email\" className=\"form-control\" name=\"email\" value={selectedEmployee.email} onChange={handleEditChange} required /></div>\r\n                    {/* ... other form fields ... */}\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Save Changes</button>\r\n                </form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmployeeListPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}