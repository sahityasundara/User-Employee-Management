{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUNDARA RAMARAO\\\\user-employee-management-frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport { login } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MySwal = withReactContent(Swal);\n_c = MySwal;\nconst LoginPage = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  // We no longer need the 'error' state, SweetAlert2 will handle it\n  // const [error, setError] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!username || !password) {\n      MySwal.fire({\n        icon: 'warning',\n        title: 'Missing Information',\n        text: 'Username and password are required.'\n      });\n      return;\n    }\n    MySwal.fire({\n      title: 'Logging In...',\n      text: 'Please wait while we verify your credentials.',\n      allowOutsideClick: false,\n      didOpen: () => {\n        Swal.showLoading();\n      }\n    });\n    try {\n      const response = await login(username, password);\n      MySwal.close();\n      onLoginSuccess(response.data);\n    } catch (err) {\n      MySwal.close(); // Close the \"Logging In...\" pop-up\n      // Show a professional error pop-up\n      MySwal.fire({\n        icon: 'error',\n        title: 'Login Failed',\n        text: 'Please check your credentials and try again.',\n        customClass: {\n          confirmButton: 'btn btn-danger me-2'\n        },\n        buttonsStyling: false\n      });\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PayFlow Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          className: \"form-control\" // Bootstrap class\n          ,\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          className: \"form-control\" // Bootstrap class\n          ,\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c2 = LoginPage;\nexport default LoginPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"MySwal\");\n$RefreshReg$(_c2, \"LoginPage\");","map":{"version":3,"names":["React","useState","Swal","withReactContent","login","jsxDEV","_jsxDEV","MySwal","_c","LoginPage","onLoginSuccess","_s","username","setUsername","password","setPassword","handleSubmit","e","preventDefault","fire","icon","title","text","allowOutsideClick","didOpen","showLoading","response","close","data","err","customClass","confirmButton","buttonsStyling","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c2","$RefreshReg$"],"sources":["C:/Users/SUNDARA RAMARAO/user-employee-management-frontend/src/pages/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { login } from '../services/api';\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nconst LoginPage = ({ onLoginSuccess }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    // We no longer need the 'error' state, SweetAlert2 will handle it\r\n    // const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!username || !password) {\r\n            MySwal.fire({\r\n                icon: 'warning',\r\n                title: 'Missing Information',\r\n                text: 'Username and password are required.',\r\n            });\r\n            return;\r\n        }\r\n        \r\n        \r\n        MySwal.fire({\r\n            title: 'Logging In...',\r\n            text: 'Please wait while we verify your credentials.',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        try {\r\n            const response = await login(username, password);\r\n            MySwal.close(); \r\n            onLoginSuccess(response.data);\r\n        } catch (err) {\r\n            MySwal.close(); // Close the \"Logging In...\" pop-up\r\n            // Show a professional error pop-up\r\n            MySwal.fire({\r\n                icon: 'error',\r\n                title: 'Login Failed',\r\n                text: 'Please check your credentials and try again.',\r\n                customClass: {\r\n                    confirmButton: 'btn btn-danger me-2'\r\n                },\r\n                buttonsStyling: false\r\n            });\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h1>PayFlow Login</h1>\r\n            {/* The old error message paragraph is no longer needed */}\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        className=\"form-control\" // Bootstrap class\r\n                        value={username}\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        className=\"form-control\" // Bootstrap class\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}