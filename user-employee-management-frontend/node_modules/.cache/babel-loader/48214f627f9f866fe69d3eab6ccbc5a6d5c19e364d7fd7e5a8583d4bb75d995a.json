{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUNDARA RAMARAO\\\\user-employee-management-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom';\nimport LoginPage from './pages/LoginPage';\nimport AdminDashboard from './pages/AdminDashboard';\nimport ResetPasswordPage from './pages/ResetPasswordPage';\nimport DashboardLayout from './layouts/DashboardLayout';\nimport DashboardHomePage from './pages/DashboardHomePage';\nimport EmployeeListPage from './pages/EmployeeListPage';\nimport './App.css';\nimport AdminLayout from './layouts/AdminLayout';\nimport AdminHomePage from './pages/AdminHomePage';\nimport ManageUsersPage from './pages/ManageUsersPage';\n\n// A component to protect routes that require authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles\n}) => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Check if the user has one of the allowed roles\n  const hasRole = user.roles.some(role => allowedRoles.includes(role));\n  if (!hasRole) {\n    // If not, redirect to a fallback page or login\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n\n  // If logged in but must reset password, force redirect\n  if (user.firstTimeLogin) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/reset-password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const handleLoginSuccess = userData => {\n    localStorage.setItem('user', JSON.stringify(userData));\n    setUser(userData);\n    if (userData.firstTimeLogin) {\n      navigate('/reset-password');\n      return;\n    }\n\n    // Navigate based on role\n    if (userData.roles.includes('ROLE_ADMIN')) navigate('/admin');else if (userData.roles.includes('ROLE_HR')) navigate('/hr/dashboard');else if (userData.roles.includes('ROLE_MANAGER')) navigate('/manager/dashboard'); // For the future\n    else navigate('/login'); // Fallback\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(LoginPage, {\n        onLoginSuccess: handleLoginSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/reset-password\",\n      element: /*#__PURE__*/_jsxDEV(ResetPasswordPage, {\n        onPasswordResetSuccess: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/admin/*\",\n      element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        allowedRoles: ['ROLE_ADMIN'],\n        children: /*#__PURE__*/_jsxDEV(AdminLayout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"dashboard\",\n        element: /*#__PURE__*/_jsxDEV(AdminHomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"manage-users\",\n        element: /*#__PURE__*/_jsxDEV(ManageUsersPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/hr/*\",\n      element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        allowedRoles: ['ROLE_HR'],\n        children: /*#__PURE__*/_jsxDEV(DashboardLayout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"dashboard\",\n        element: /*#__PURE__*/_jsxDEV(DashboardHomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"employees\",\n        element: /*#__PURE__*/_jsxDEV(EmployeeListPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"/48TlfV0adSMEvsbW2gk5sMeopI=\", false, function () {\n  return [useNavigate];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","Route","Routes","useNavigate","LoginPage","AdminDashboard","ResetPasswordPage","DashboardLayout","DashboardHomePage","EmployeeListPage","AdminLayout","AdminHomePage","ManageUsersPage","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","user","JSON","parse","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","hasRole","roles","some","role","includes","firstTimeLogin","_c","App","_s","setUser","navigate","storedUser","handleLoginSuccess","userData","setItem","stringify","handleLogout","removeItem","path","element","onLoginSuccess","onPasswordResetSuccess","index","_c2","$RefreshReg$"],"sources":["C:/Users/SUNDARA RAMARAO/user-employee-management-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom';\nimport LoginPage from './pages/LoginPage';\nimport AdminDashboard from './pages/AdminDashboard';\nimport ResetPasswordPage from './pages/ResetPasswordPage';\nimport DashboardLayout from './layouts/DashboardLayout';\nimport DashboardHomePage from './pages/DashboardHomePage';\nimport EmployeeListPage from './pages/EmployeeListPage';\nimport './App.css';\nimport AdminLayout from './layouts/AdminLayout';\nimport AdminHomePage from './pages/AdminHomePage';\nimport ManageUsersPage from './pages/ManageUsersPage';\n\n// A component to protect routes that require authentication\nconst ProtectedRoute = ({ children, allowedRoles }) => {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (!user) {\n        return <Navigate to=\"/login\" />;\n    }\n    \n    // Check if the user has one of the allowed roles\n    const hasRole = user.roles.some(role => allowedRoles.includes(role));\n    if (!hasRole) {\n        // If not, redirect to a fallback page or login\n        return <Navigate to=\"/login\" />;\n    }\n\n    // If logged in but must reset password, force redirect\n    if (user.firstTimeLogin) {\n        return <Navigate to=\"/reset-password\" />;\n    }\n    \n    return children;\n};\n\nfunction App() {\n    const [user, setUser] = useState(null);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const storedUser = localStorage.getItem('user');\n        if (storedUser) {\n            setUser(JSON.parse(storedUser));\n        }\n    }, []);\n\n    const handleLoginSuccess = (userData) => {\n        localStorage.setItem('user', JSON.stringify(userData));\n        setUser(userData);\n\n        if (userData.firstTimeLogin) {\n            navigate('/reset-password');\n            return;\n        }\n        \n        // Navigate based on role\n        if (userData.roles.includes('ROLE_ADMIN')) navigate('/admin');\n        else if (userData.roles.includes('ROLE_HR')) navigate('/hr/dashboard');\n        else if (userData.roles.includes('ROLE_MANAGER')) navigate('/manager/dashboard'); // For the future\n        else navigate('/login'); // Fallback\n    };\n    \n    const handleLogout = () => {\n        localStorage.removeItem('user');\n        setUser(null);\n        navigate('/login');\n    };\n\n    return (\n        <Routes>\n            {/* PUBLIC ROUTE */}\n            <Route path=\"/login\" element={<LoginPage onLoginSuccess={handleLoginSuccess} />} />\n\n            {/* PASSWORD RESET (conditionally protected) */}\n            <Route path=\"/reset-password\" element={<ResetPasswordPage onPasswordResetSuccess={handleLogout} />} />\n\n            {/* ADMIN ROUTES */}\n             <Route\n            path=\"/admin/*\"\n            element={\n                <ProtectedRoute allowedRoles={['ROLE_ADMIN']}>\n                    <AdminLayout />\n                </ProtectedRoute>\n            }\n        >\n            <Route path=\"dashboard\" element={<AdminHomePage />} />\n            <Route path=\"manage-users\" element={<ManageUsersPage />} />\n            <Route index element={<Navigate to=\"dashboard\" />} />\n        </Route>\n\n            {/* HR DASHBOARD ROUTES (with nested layout) */}\n            <Route\n                path=\"/hr/*\"\n                element={\n                    <ProtectedRoute allowedRoles={['ROLE_HR']}>\n                        <DashboardLayout />\n                    </ProtectedRoute>\n                }\n            >\n                <Route path=\"dashboard\" element={<DashboardHomePage />} />\n                <Route path=\"employees\" element={<EmployeeListPage />} />\n                 {/* Default HR route, e.g. /hr goes to /hr/dashboard */}\n                <Route index element={<Navigate to=\"dashboard\" />} />\n            </Route>\n\n            {/* DEFAULT CATCH-ALL ROUTE */}\n            <Route path=\"*\" element={<Navigate to=\"/login\" />} />\n        </Routes>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}